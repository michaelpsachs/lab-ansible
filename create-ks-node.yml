---
- name: Create cloud-init user-data for {{ node.name }} on Pi
  delegate_to: localhost
  become: false
  ansible.builtin.copy:
    dest: "/tmp/user-data-{{ node.name }}"
    mode: '0644'
    content: |
      #cloud-config
      hostname: {{ node.name }}
      users:
        - name: mike
          sudo: ALL=(ALL) NOPASSWD:ALL
          shell: /bin/bash
          plain_text_passwd: 'temppass123'
          lock_passwd: false
          ssh_authorized_keys:
            - {{ lookup('file', ssh_public_key) }}

      package_update: true
      packages:
        - curl
        - apt-transport-https
        - ca-certificates
        - software-properties-common
        - containerd
        - htop
        - vim

      runcmd:
        - swapoff -a
        - sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab
        - modprobe overlay
        - modprobe br_netfilter
        - echo "overlay" >> /etc/modules-load.d/k8s.conf
        - echo "br_netfilter" >> /etc/modules-load.d/k8s.conf
        - sysctl -w net.bridge.bridge-nf-call-iptables=1
        - sysctl -w net.bridge.bridge-nf-call-ip6tables=1
        - sysctl -w net.ipv4.ip_forward=1
        - mkdir -p /etc/sysctl.d
        - echo "net.bridge.bridge-nf-call-iptables=1" >> /etc/sysctl.d/k8s.conf
        - echo "net.bridge.bridge-nf-call-ip6tables=1" >> /etc/sysctl.d/k8s.conf
        - echo "net.ipv4.ip_forward=1" >> /etc/sysctl.d/k8s.conf

- name: Create cloud-init meta-data for {{ node.name }} on Pi
  delegate_to: localhost
  become: false
  ansible.builtin.copy:
    dest: "/tmp/meta-data-{{ node.name }}"
    mode: '0644'
    content: |
      instance-id: {{ node.name }}-{{ ansible_date_time.epoch }}
      local-hostname: {{ node.name }}

- name: Create cloud-init network-config for {{ node.name }} on Pi
  delegate_to: localhost
  become: false
  ansible.builtin.copy:
    dest: "/tmp/network-config-{{ node.name }}"
    mode: '0644'
    content: |
      version: 2
      ethernets:
        enp1s0:
          dhcp4: true

- name: Create cloud-init seed disk for {{ node.name }} on Pi
  delegate_to: localhost
  become: false
  ansible.builtin.shell:
    cmd: |
      set -o pipefail
      rm