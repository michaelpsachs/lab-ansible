---
- name: Deploy Windows VM on KVM
  hosts: 192.168.1.99
  become: true

  tasks:
    - name: Check if qcow2 already exists
      ansible.builtin.stat:
        path: "/var/lib/libvirt/images/{{ vm_name }}.qcow2"
      register: qcow2_file

    - name: Convert VHD to qcow2
      ansible.builtin.command: qemu-img convert -f vpc -O qcow2 {{ vhd_path }} /var/lib/libvirt/images/{{ vm_name }}.qcow2
      when: not qcow2_file.stat.exists
      changed_when: true

    - name: Install libguestfs-tools if not present
      ansible.builtin.package:
        name: libguestfs-tools
        state: present

    - name: Enable WinRM in the Windows image
      ansible.builtin.shell: |
        virt-customize -a /var/lib/libvirt/images/{{ vm_name }}.qcow2 \
          --run-command 'powershell.exe Enable-PSRemoting -Force' \
          --run-command 'powershell.exe Set-Item WSMan:\localhost\Service\Auth\Basic -Value $true' \
          --run-command 'powershell.exe Set-Item WSMan:\localhost\Service\AllowUnencrypted -Value $true' \
          --run-command 'powershell.exe Set-NetFirewallRule -Name "WINRM-HTTP-In-TCP" -Enabled True'
      when: not qcow2_file.stat.exists
      changed_when: true

    - name: Check if VM already exists
      ansible.builtin.command: virsh list --all --name
      register: vm_list
      changed_when: false

    - name: Create VM
      ansible.builtin.command: >
        virt-install
        --name {{ vm_name }}
        --memory {{ vm_ram }}
        --vcpus {{ vm_cpus }}
        --disk /var/lib/libvirt/images/{{ vm_name }}.qcow2,bus=virtio
        --network network={{ vm_network }},model=virtio
        --os-variant win2k22
        --graphics vnc,listen=0.0.0.0
        --noautoconsole
        --import
      when: vm_name not in vm_list.stdout_lines
      changed_when: true

    - name: Ensure VM is running
      community.libvirt.virt:
        name: "{{ vm_name }}"
        state: running

    - name: Wait for Windows to boot and WinRM to be available
      ansible.builtin.wait_for:
        host: "{{ vm_ip }}"
        port: 5985
        delay: 60
        timeout: 300

    - name: Show next steps
      ansible.builtin.debug:
        msg:
          - "VM {{ vm_name }} is running with WinRM enabled"
          - "Ready for DC configuration"